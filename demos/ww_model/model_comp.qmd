---
title: "PyRenew and wwinference Fit and Forecast Comparison"
format: gfm
editor: visual
---

This document shows graphical comparisons for key variables in the PyRenew model fit to example data (notebooks/pyrenew_hew_model.qmd) and Stan model fit to example data (notebooks/wwinference.Rmd). In order to render this document, those notebooks must be rendered first.

```{r}
#| output: false
library(tidyverse)
library(tidybayes)
library(fs)
library(cmdstanr)
library(posterior)
library(jsonlite)
library(scales)
library(here)
library(forecasttools)
ci_width <- c(0.5, 0.8, 0.95)
fit_dir <- here(path("demos/ww_model/data/fit"))
```

## Load Data

```{r}
hosp_data <- tibble(.value = path(fit_dir, "stan_data", ext = "json") |>
  jsonlite::read_json() |>
  pluck("hosp") |>
  unlist()) |>
  mutate(time = row_number())

stan_files <-
  dir_ls(fit_dir,
    glob = "*wwinference*"
  ) |>
  enframe(name = NULL, value = "file_path") |>
  mutate(file_details = path_ext_remove(path_file(file_path))) |>
  separate_wider_delim(file_details,
    delim = "-",
    names = c("model", "date", "chain", "hash")
  ) |>
  mutate(date = ymd_hm(date)) |>
  filter(date == max(date)) |>
  pull(file_path)


stan_tidy_draws <- read_cmdstan_csv(stan_files)$post_warmup_draws |>
  tidy_draws()

pyrenew_tidy_draws <-
  path(fit_dir, "inference_data", ext = "csv") |>
  read_csv() |>
  forecasttools::inferencedata_to_tidy_draws()
```

## Calculate Credible Intervals for Plotting

```{r}
combined_ci_for_plotting <-
  bind_rows(
    deframe(pyrenew_tidy_draws)$posterior_predictive |>
      gather_draws(observed_hospital_admissions[time], Rt[time], ihr[time], rt_subpop[time,group]) |>
      median_qi(.width = ci_width) |>
      mutate(model = "pyrenew"),
    stan_tidy_draws |>
      gather_draws(pred_hosp[time], rt[time], p_hosp[time],r_subpop_t[group,time]) |>
      mutate(.variable = case_when(
        .variable == "pred_hosp" ~ "observed_hospital_admissions",
        .variable == "p_hosp" ~ "ihr",
        .variable == "rt" ~ "Rt",
        .variable == "r_subpop_t" ~ "rt_subpop",
        TRUE ~ .variable
      )) |>
      median_qi(.width = ci_width) |>
      mutate(model = "stan")
  )
```

## Hospital Admission Comparison

```{r}
combined_ci_for_plotting |>
  filter(.variable == "observed_hospital_admissions") |>
  ggplot(aes(time, .value)) +
  facet_wrap(~model) +
  geom_lineribbon(aes(ymin = .lower, ymax = .upper), color = "#08519c") +
  scale_fill_brewer(
    name = "Credible Interval Width",
    labels = ~ percent(as.numeric(.))
  ) +
  geom_point(data = hosp_data) +
  cowplot::theme_cowplot() +
  ggtitle("Vignette Data Model Comparison") +
  scale_y_continuous("Hospital Admissions") +
  scale_x_continuous("Time") +
  theme(legend.position = "bottom")
```

## Rt Comparions

```{r}
combined_ci_for_plotting |>
  filter(.variable == "Rt") |>
  ggplot(aes(time, .value)) +
  facet_wrap(~model) +
  geom_lineribbon(aes(ymin = .lower, ymax = .upper), color = "#08519c") +
  scale_fill_brewer(
    name = "Credible Interval Width",
    labels = ~ percent(as.numeric(.))
  ) +
  cowplot::theme_cowplot() +
  ggtitle("Vignette Data Model Comparison") +
  scale_y_log10("Rt", breaks = scales::log_breaks(n = 6)) +
  scale_x_continuous("Time") +
  theme(legend.position = "bottom") +
  geom_hline(yintercept = 1, linetype = "dashed")
```

## Subpopulation Rt Comparions

```{r}
combined_ci_for_plotting |>
  filter(.variable == "rt_subpop") |>
  mutate(group = if_else(model == "pyrenew", group + 1, group)) |>
  # adjust for index python starting from 1
  ggplot(aes(time, .value)) +
  facet_grid(rows = vars(group), cols = vars(model)) +
  geom_lineribbon(aes(ymin = .lower, ymax = .upper), color = "#08519c") +
  scale_fill_brewer(
    name = "Credible Interval Width",
    labels = ~ percent(as.numeric(.))
  ) +
  cowplot::theme_cowplot() +
  ggtitle("Vignette Data Model Comparison") +
  scale_y_log10("Subpopulation Rt") +
  scale_x_continuous("Time") +
  theme(legend.position = "bottom")
```

## IHR Comparison

```{r}
combined_ci_for_plotting |>
  filter(.variable == "ihr") |>
  ggplot(aes(time, .value)) +
  facet_wrap(~model) +
  geom_lineribbon(aes(ymin = .lower, ymax = .upper), color = "#08519c") +
  scale_fill_brewer(
    name = "Credible Interval Width",
    labels = ~ percent(as.numeric(.))
  ) +
  cowplot::theme_cowplot() +
  ggtitle("Vignette Data Model Comparison") +
  scale_y_log10("IHR (p_hosp)", breaks = scales::log_breaks(n = 6)) +
  scale_x_continuous("Time") +
  theme(legend.position = "bottom")
```

IHR lengths are different (Stan model generates an unnecessarily long version, see https://github.com/CDCgov/ww-inference-model/issues/43#issuecomment-2330269879)