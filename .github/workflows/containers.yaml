name: Create Docker Image

on:
  push:
    branches: [main]
    # ignore workflows, ISSUE_TEMPLATE, except for this workflow.
    paths-ignore:
      - ".github/workflows/**"
      - ".github/ISSUE_TEMPLATE/**"
      - "!.github/workflows/containers.yaml"
  pull_request:
    branches: [main]
    # ignore workflows, ISSUE_TEMPLATE, except for this workflow.
    paths-ignore:
      - ".github/workflows/**"
      - ".github/ISSUE_TEMPLATE/**"
      - "!.github/workflows/containers.yaml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: pyrenew-hew

jobs:
    build-pipeline-image:
      runs-on: ubuntu-latest
      name: Build image
      outputs:
        tag: ${{ steps.image-tag.outputs.tag }}
      steps:

        - name: Checkout code
          uses: actions/checkout@v4

        - name: Extract branch name
          shell: bash
          run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          id: branch-name

        - name: Figure out tag (either latest if it is main or the branch name)
          shell: bash
          id: image-tag
          run: |
            if [ "${{ steps.branch-name.outputs.branch }}" = "main" ]; then
              echo "tag=latest" >> $GITHUB_OUTPUT
            else
              echo "tag=${{ steps.branch-name.outputs.branch }}" >> $GITHUB_OUTPUT
            fi

        - name: Docker Login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Docker build and push
          run: |
            bash $GITHUB_WORKSPACE/.github/scripts/docker_build_and_push.sh \
              ${{ env.IMAGE_NAME }} \
              ${{ steps.image-tag.outputs.tag }} \
              ${{ github.event.pull_request.head.sha || github.sha }} \
              ${{ steps.branch-name.outputs.branch }} \
