name: test

on:
  pull_request:
  push:
    branches: [main]

jobs:
  test:
    name: Run tests and collect coverage (python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
        
      - name: cache poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry

      - name: install poetry
        run: pip install poetry

      - name: install package
        run: poetry install --with test

      - name: run tests
        run: |
          poetry run pytest \
            --mpl --mpl-default-tolerance=10 \
            --cov=pyrenew-hew --cov-report term --cov-report xml .

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          flags: unittests
          files: coverage.xml
          plugins: pycoverage
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

#test coverage for R package
  test-coverage-R:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage
          working-directory: hewr

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          covr::to_cobertura(cov)
        shell: Rscript {0}

      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./cobertura.xml
          plugins: noop
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Show testthat output
        if: always()
        run: |
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
